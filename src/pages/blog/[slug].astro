---
import * as interfaces from '../../lib/interfaces.ts'
import {
  getAllPosts,
  getPostBySlug,
  getPostsByTag,
  getAllTags,
  getAllBlocksByBlockId,
} from '../../lib/notion/client.ts'
import { getPostLink } from '../../lib/blog-helpers.ts'
import Layout from '../../layouts/Layout.astro'
import PostDate from '../../components/PostDate.astro'
import PostTags from '../../components/PostTags.astro'
import PostTitle from '../../components/PostTitle.astro'
import PostBody from '../../components/PostBody.astro'
import BlogPostsLink from '../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../components/BlogTagsLink.astro'
import styles from '../../styles/blog.module.css'

export async function getStaticPaths() {
  const posts = await getAllPosts()
  return posts.map((post: interfaces.Post) => ({ params: { slug: post.Slug }}))
}

const { slug } = Astro.params

const post = await getPostBySlug(slug)
if (!post) {
  throw new Error('Post not found. slug: ${slug}')
}

const [
  blocks,
  tags,
  postsHavingSameTag,
] = await Promise.all([
  getAllBlocksByBlockId(post.PageId),
  getAllTags(),
  getPostsByTag(post.Tags[0]),
])
---

<Layout title={post.Title} description={post.Excerpt} path={getPostLink(post.Slug)}>
  <div className={styles.container}>
    <main>
      <div className={styles.post}>
        <PostDate post={post} />
        <PostTags post={post} />
        <PostTitle post={post} enableLink={false} />
        <PostBody blocks={blocks} />

        <footer>
        </footer>
      </div>
    </main>

    <aside>
      <BlogPostsLink heading={"⚑ " + post.Tags[0]} posts={postsHavingSameTag.filter((p: interfaces.Post) => p.Slug !== post.Slug).slice(0, 6)} />
      <BlogTagsLink heading="⚑ Tags" tags={tags} />
    </aside>
  </div>
</Layout>
