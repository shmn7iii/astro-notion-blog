---
import * as interfaces from '../../lib/interfaces.ts'
import {
  getAllPosts,
  getPostBySlug,
  getBlock,
  getAllBlocksByBlockId,
  downloadFile,
} from '../../lib/notion/client.ts'
import { extractTargetBlocks } from '../../lib/blog-helpers.ts'
import Layout from '../../layouts/Layout.astro'
import PostTitle from '../../components/PostTitle.astro'
import PostBody from '../../components/PostBody.astro'
import Header from '../../components/Header.astro'
import styles from '../../styles/blog.module.css'

export async function getStaticPaths() {
  const posts = await getAllPosts()
  return posts.map((post: interfaces.Post) => ({ params: { slug: post.Slug } }))
}

const slug = '_about'

const post = await getPostBySlug(slug)
if (!post) {
  throw new Error('Post not found. slug: ${slug}')
}

const [blocks] = await Promise.all([getAllBlocksByBlockId(post.PageId)])

const fileAtacchedBlocks = extractTargetBlocks('image', blocks)
  .concat(extractTargetBlocks('file', blocks))
  .filter((block) => {
    if (!block) {
      return false
    }
    const imageOrFile = block.Image || block.File
    return imageOrFile && imageOrFile.File && imageOrFile.File.Url
  })

// Download files
await Promise.all(
  fileAtacchedBlocks
    .map(async (block) => {
      const expiryTime = (block.Image || block.File).File.ExpiryTime
      if (Date.parse(expiryTime) > Date.now()) {
        return Promise.resolve(block)
      }
      return getBlock(block.Id)
    })
    .map((promise) =>
      promise.then((block) => {
        let url!: URL
        try {
          url = new URL((block.Image || block.File).File.Url)
        } catch (err) {
          console.log('Invalid file URL')
          return Promise.reject()
        }
        return Promise.resolve(url)
      })
    )
    .map((promise) => promise.then(downloadFile))
)
---

<Layout title="About" path="/about">
  <div slot="header">
    <Header />
  </div>
  <div slot="main" class={styles.main}>
    <div class={styles.post}>
      <PostTitle post={post} inSlugPage={true} />
      <PostBody blocks={blocks} />
    </div>
  </div>
</Layout>
